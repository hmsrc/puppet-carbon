class carbon::config (
  $carbon_conf_dir                      = $::carbon::carbon_conf_dir,
  $carbon_conf                          = $::carbon::carbon_conf,
  $cache_storage_dir                    = $::carbon::cache_storage_dir,
  $cache_local_data_dir                 = $::carbon::cache_local_data_dir,
  $cache_whitelists_dir                 = $::carbon::cache_whitelists_dir,
  $cache_conf_dir                       = $::carbon::cache_conf_dir,
  $cache_log_dir                        = $::carbon::cache_log_dir,
  $cache_pid_dir                        = $::carbon::cache_pid_dir,
  $cache_enable_logrotation             = $::carbon::cache_enable_logrotation,
  $cache_user                           = $::carbon::cache_user,
  $cache_max_cache_size                 = $::carbon::cache_max_cache_size,
  $cache_max_updates_per_second         = $::carbon::cache_max_updates_per_second,
  $cache_max_creates_per_minute         = $::carbon::cache_max_creates_per_minute,
  $cache_line_receiver_interface        = $::carbon::cache_line_receiver_interface,
  $cache_line_receiver_port             = $::carbon::cache_line_receiver_port,
  $cache_line_receiver_backlog          = $::carbon::cache_line_receiver_backlog,
  $cache_enable_udp_listener            = $::carbon::cache_enable_udp_listener,
  $cache_udp_receiver_interface         = $::carbon::cache_udp_receiver_interface,
  $cache_udp_receiver_port              = $::carbon::cache_udp_receiver_port,
  $cache_pickle_receiver_interface      = $::carbon::cache_pickle_receiver_interface,
  $cache_pickle_receiver_port           = $::carbon::cache_pickle_receiver_port,
  $cache_log_listener_connections       = $::carbon::cache_log_listener_connections,
  $cache_use_insecure_unpickler         = $::carbon::cache_use_insecure_unpickler,
  $cache_cache_query_interface          = $::carbon::cache_cache_query_interface,
  $cache_cache_query_port               = $::carbon::cache_cache_query_port,
  $cache_use_flow_control               = $::carbon::cache_use_flow_control,
  $cache_log_updates                    = $::carbon::cache_log_updates,
  $cache_log_cache_hits                 = $::carbon::cache_log_cache_hits,
  $cache_log_cache_queue_sorts          = $::carbon::cache_log_cache_queue_sorts,
  $cache_cache_write_strategy           = $::carbon::cache_cache_write_strategy,
  $cache_whisper_autoflush              = $::carbon::cache_whisper_autoflush,
  $cache_whisper_fallocate_create       = $::carbon::cache_whisper_fallocate_create,
  $cache_enable_amqp                    = $::carbon::cache_enable_amqp,
  $cache_amqp_verbose                   = $::carbon::cache_amqp_verbose,
  $cache_amqp_host                      = $::carbon::cache_amqp_host,
  $cache_amqp_port                      = $::carbon::cache_amqp_port,
  $cache_amqp_vhost                     = $::carbon::cache_amqp_vhost,
  $cache_amqp_user                      = $::carbon::cache_amqp_user,
  $cache_amqp_password                  = $::carbon::cache_amqp_password,
  $cache_amqp_exchange                  = $::carbon::cache_amqp_exchange,
  $cache_relay_amqp_metric_name_in_body = $::carbon::cache_relay_amqp_metric_name_in_body,
  $cache_storage_schemas                = $::carbon::cache_storage_schemas,
  ) {
    #Write config file as template
    file { $carbon_conf:
      owner   => 'root',
      group   => 'root',
      mode    => '0644',
      content => template('carbon/carbon.conf.erb'),
      require => Class['carbon::install'],
    }


    #Storage Schemas
    file { "${carbon_conf_dir}/storage-schemas.conf":
      owner   => 'root',
      group   => 'root',
      mode    => '0644',
      content => template('carbon/storage-schemas.conf.erb'),
      require => File[$carbon_conf],
    }
  }
